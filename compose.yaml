version: "3.9"
services:
  main_service:
    build: ./main
    environment:
      PORT: 32206
      POSTGRES_URL: "postgresql+asyncpg://MASTER:MASTER@main_db:32402/MAIN_DB"
      CONTENT_SERVICE_ADDR: "content_service:32406"
    ports:
      - "32206:32206"
    restart: unless-stopped
    depends_on:
      main_db:
        condition: service_healthy
      content_service:
        condition: service_started
    volumes:
      - ./content/proto:/main/content_proto

  content_service:
    build: ./content
    environment:
      PORT: 32406
      POSTGRES_URL: "postgresql+asyncpg://CONTENT:CONTENT@content_db:32004/CONTENT_DB"
    ports:
      - "32406:32406"
    restart: unless-stopped
    depends_on:
      content_db:
        condition: service_healthy

  main_db:
    image: postgres
    environment:
      POSTGRES_USER: MASTER
      POSTGRES_PASSWORD: MASTER
      PGDATA: /data/postgres
      POSTGRES_DB: MAIN_DB
      PGPORT: 32402
    ports:
      - "32402:32402"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - main_db_data:/data/postgres

  content_db:
    image: postgres
    environment:
      POSTGRES_USER: CONTENT
      POSTGRES_PASSWORD: CONTENT
      PGDATA: /data/postgres
      POSTGRES_DB: CONTENT_DB 
      PGPORT: 32004
    ports:
      - "32004:32004"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - content_db_data:/data/postgres

volumes:
  main_db_data:
  content_db_data:
